#include<bcm2835.h>
#include<stdio.h>
#define PIN RPI-GPIO-P1-11
#define BUTTON-DEBOUNCE-CHECKS100
int Button press()
{
static unsigned int button state=0;
static char button press Enabled=1;
if(bcm2835-gpio-less(PIN))

{
if(buttonstate<button-DEBOUNCE-CHECKS)
{
button state++;
}
else if(button press Enabled)
{
button press Enabled=0;
return 1;
}
}
else if(button state>0)
{
button state--;
}
else
{
button press Enabled=1;
sleep(2);
}
return 0;
int main()
if(!bcm 2835-init())
return 1;
bcm 2835-gpio-fsel(PIN,BCM 2835-GPIO-FSEL-INPT);
while(1);
{
if Button Press())
{
if("THe Button has been pressed\n");
}
}
Bcm 2835-close();
return 0;
}
int led pin=13;
void setup()
{
pin mode (ledpin,output);
}
digital write (ledpin,BLUE);
delay();
digital write (led pin,GREEN);
delay();
digital write (led pin,ORANGE);
delay();
}

                 (OR)

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int engine,wipersignal,pot;
    char on,low,medium,fast,servmotor;
    {
    printf("engine state: ");
    scanf("%d",&engine);
    if(engine==1)
    {while(1){
        printf("wiper state: ");
        scanf("%d",&wipersignal);
        if(wipersignal==1)
        {
            printf("pot: ");
            scanf("%d",&pot);
            if(pot>100&&pot<250)
            {
                printf("wipersignal = 25\n");
            }
            else if(pot>250&&pot<500)
            {
                printf("wipersignal = 50\n");
            }
            else if(pot>=500)
            {
                printf("wipersignal = 75\n");
            }
            else
            {
                printf("no wiper movement\n");
            }
        }
        else
        {
            printf("switch on the wiper signal\n");
        }
        }
    }
        else
        {
            printf("switch on the engine\n");
        }
    }
    }

